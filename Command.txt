

		**************************************************************************


আমরা যখন গিটে কোনো প্রোজেক্ট এড করতে চাই তখন সবার আগে আমরা যে কাজটি করতে পারি তা হচ্ছে আমরা গিটকে কনফিগ করে নিতে পারি।  
আমরা চাইলে গিটকে গ্লোবালি কনফিগ করতে পারি আবার চাইলে লোকালি কনফিগ করতে পারি।
গ্লোবালি কনফিগ করার জন্য নিচের কমান্ড দুইটি এক্সিকিউট করতে হবেঃ-
$git config --global user.name "Md. Sohan Millat Sakib"		(For set your user id)
$git config --global user.email "millatsakib01@gmail.com"	(For set your email)

আর আমরা যদি লোকালি user name আর password সেট করতে চাই সেক্ষেত্রে নিচের কমান্ড দুটি এক্সিকিউট করতে হবে।

$git config user.name "Md. Sohan Millat Sakib"		(For set your user id)
$git config user.email "millatsakib01@gmail.com"	(For set your email)


আর আমরা যদি প্রজেক্টে সেট করা নাম আর ইমেইল দেখতে চাই সেক্ষেত্রে আমাদের নিচের কমান্ড দুটি এক্সিকিউট করতে হবে।

$git config user.name		(For get your user id)
$git config user.email	(For get your email)

এরপর আমরা প্রজেক্ট ফোল্ডার বানাব । এর জন্য আমরা টার্মিনাল ইউজ করতে পারি।এর জন্য নিচের কমান্ড এক্সিকিউট করতে হবে।

$mkdir directory_name

আর আমরা যদি জানতে চাই যে আমি যে ডিরেক্টরি তে আছি সেখানে কি কি ফাইল আছে তাহলে আমরা নিচের কমান্ডটি ব্যাবহার করতে পারি । 
$ls

এখন আমরা আরেকটি কমান্ড সম্পর্কে  জানব তা হচ্ছে কিভাবে অন্য ডিরেক্টরিতে যাওয়া যায়। এর জন্য নিচের কমান্ডটি এক্সিকিউট করতে পারি । 
$cd directiory_name

আর আমরা যদি ডিরেক্টরি থেকে ব্যাক করতে চাই তাহলে আমরা নিচের কমান্ড এক্সিকিউট করতে পারি
$cd ..

		**********************************************************************

এতক্ষণ আমরা দেখলাম যে কিভাবে ডিরেক্টরি রিলেটেড বেসিক কাজগুলো করা যায়। এখন আমরা দেখব কিভাবে আমরা গিট নিয়ে কাজ করব।
গিট নিয়ে কাজ করার জন্য প্রথমেই আমাদের যে প্রোজেক্টে গিট নিয়ে কাজ করব সেখানে গিটকে ইনিশিয়ালাজ করতে হবে। এই জন্য নিচের কমান্ড রান করতে হবে
$git init
আর আমরা যদি কোন ফাইল কি অবস্থায় আছে তা জানতে চাই তাহলে আমাদের নিচের কমান্ডটি ব্যাবহার করতে হবে।
$git status
তো git status কমান্ডের মাধ্যমে তো আমরা দেখে ফেললাম যে কোন কোন ফাইল ট্রাক আছে আর কোন কোন ফাইল আনট্রাকড অবস্থায় আছে। এবার আমাদের কাজ হচ্ছে কোনো ফাইল কে কিভাবে staging 
area তে পাঠাতে হয় তা জানা। staging area ফাইলগুলো বিভিন্নভাবে পাঠানো যায় । আমরা চাইলে একটা ফাইল কে পাঠাতে পারি আবার চাইলে সবগুলো ফাইল কে পাঠাতে পারি আবার চাইলে নির্দিষ্ট 
কোনো extention এর ফাইলকেও পাঠাতে পারি।কিভাবে এই কাজ করা যায় নিচে তা দেওয়া হলোঃ
			####################################################
					ফাইল স্টেজিং এরিয়াতে পাঠানো 
আমরা যদি নির্দিষ্ট কোনো একটা ফাইলকে staging area তে পাঠাতে চাই তখন নিচের কমান্ড এক্সিকিউট করতে পারি।
$git add file_name
আমরা যদি একসাথে সব ফাইল কে staging area তে নিতে চাই তখন আমরা নিচের কমান্ড দুটির যেকোনো একটি ব্যাবহার করতে পারি 
$git add --all
or,
$git add -A
যদি একই এক্সটেনশনের সকল ফাইল কে একই সাথে stage এ তুলতে চাই তখন আমাদের নিচের কমান্ডটি এক্সিকিউট করতে হবে
$git add *.extention
আর আমরা যদি যে ডিরেক্টরিতে আছি সেই ডিরেক্টরি এবং তার পরের ডিরেক্টরির সকল ফাইল গিটে তুলতে চাই বাট তার আগের ডিরেক্টরির
কোনো ফাইল stage এ তুলতে না চাই তখন আমরা নিচের কমান্ডটি এক্সিকিউট করব।
$git add .
আর আমরা যদি stage তোলা সবগুলো ফাইলকে stage থেকে নামাতে চাই সেক্ষেত্রে নিচের কমান্ডটি এক্সিকিউট করতে হবে।
$git reset
আর আমরা যদি একটা নির্দিষ্ট ফাইল কে স্টেজ থেকে নামাতে চাই তখন আমরা নিচের কমান্ডকে এক্সিকিউট করতে পারি
$git restore --staged file_name

			####################################################
					কমিট করা

গিটে ফাইল কমিট করা একদমই সহজ। এই জন্য যে যে ফাইল কমিট করতে চাই সেগুলো আগে স্টেজে তুলতে হবে তারপর আমরা নিচের কমান্ডের মধ্যমে আমরা কমিট করতে পারি।
$git commit        (then write commit)      (then press Esc)         (then execute the command->   :wq)

আবার আমরা চাইলে এক লাইনেও নিচের মত করে কমিট করতে পারি
$git commit -m "write here your commit massege"

আর আমরা যদি আমাদের প্রোজেক্টে করা কমিট গুলো দেখতে চাই তখন আমরা নিচের কমান্ড এক্সিকিউট করতে পারি 
$git commit  

আমরা গিটে কমিট করার পরে মনে হতে পারে অন্য আরো কিছু ফাইল লাস্ট কমিটে যুক্ত করে দরকার তখন আমরা নিচের কমান্ড এক্সিকিউট করতে পারি।
$git add -A
$git commit -m --amend 
আমরা যদি ফাইল যুক্ত করার সাথে সাথে কমিট ম্যাসেজ ও চেঞ্জ করে ফেলতে চাই সেক্ষত্রে আমরা নিচের কমান্ড এক্সিকিউট করতে পারি
$git commit -m --amend "Udated commit message."



এখন আমাদের জানা প্রয়োজন গিটে আনকমিট করা সম্পর্কে।

আনকমিট করার জন্য গিট রিসেট কমান্ড ব্যবহার করা হয়। গিট রিসেট তিন ধরনের হয়।
১. সফট রিসেটঃ সফট রিসেটের ক্ষেত্রে যে কমিট পর্যন্ত রিসেট করতে চাই সেই কয়টি কমিট ডিলিট হয়ে ফাইল গুলো স্টেজড হয়ে থাকে।
২. মিক্সড রিসেটঃ মিক্সড রিসেটের ক্ষেত্রে সফট রিসেটের মতই যে কমিট পর্যন্ত রিসেট করতে চাই সেই কয়টি কমিট ডিলিট হয়ে যায় এবং ফাইল গুলো আনস্টেজড হয়ে থাকে।
৩. হার্ড রিসেটঃ হার্ড রিসেটের ক্ষেত্রে কমিট গুলো যেমন ডিলিট হয়ে যায় তেমনি ফাইল গুলোও ডিলিট হয়ে যায়। এটি খুবই সেন্সেটিভ কমান্ড।


আমরা যদি এমনভাবে আনমিট করতে চাই যাতে আমি যে কমিটে যাব তার পরের সকল কোড Staging Area তে থাকবে তাইলে আমরা সফট রিসেট করব এজন্য আমরা নিচের কমান্ড এক্সিকিউট করব
$git reset --soft head_pointer_no.      (You get head pointer no. by exicuting the commed git log --oneline)
আবার আমরা যদি পয়েন্টার না দিয়ে ডিরেক্ট এক দুই বা তিন কমিট পেছনে যেতে চাত তাইলে হেড ধরে কাজ করে দিতে পারি। এই জন্য নিচের কমান্ড এক্সিকিট করতে হবে। 
$git reset --soft HEAD~1


আর আমরা যদি এমনভাবে আনকমিট করতে চাই যে আমি যে কমিটে আসব সেই কমিট পর্যন্তই কোড থাকে আর বাকি কোড মুছে যায় তাইলে আমরা হার্ড রিসেট করব এজন্য আমরা নিচের কমান্ড এক্সিকিট করব
$git reset --hard head_pointer_no.

আর আমরা যদি এমনভাবে আনকমিট করতে চাই যে আমি যে কমিটে আসব সেই কমিট পর্যন্তই কোড থাকে আর বাকি কোড সরাসরি Working Directory তে চলে যাক তাইলে আমরা মিক্সড রিসেট করব এজন্য নিচের কমান্ড এক্সিকিউট করতে হবে
$git reset head_pointer_no.

আমরা যখন ফাইলগুলোকে Staging area থেকে Unstage করতে চাই তখন আমাদের নিচের কমান্ডটি এক্সিকিউট করতে হবে
$git reset
			####################################################
					গিট Branching

আমরা যখন একটা প্রজেক্টে একই সাথে অনেক জন কাজ করি তখন আমাদের Branching করতে হয় । Branching রিলেটেড কিছু কমান্ড নিচে দেওয়া হলোঃ 

আমাদের যদি জানার প্রয়োজন হয় আমার প্রোজেক্টে কয়টি ও কি কি  Branch আছে তবে আমাদের নিচের কমান্ড এক্সিকিউট করতে হবে 
$git branch

আমাদের যদি নতুন কোনো branch বানানোর প্রয়োজন হয় তখন আমাদের নিচের কমান্ড এক্সিকিউট করতে হবে
$git branch branch_name

আমদের যদি অন্য Branch এ গিয়ে কাজ করার প্রয়োজন হয় তখন আমাদের নিচের কমান্ড এক্সিকিউট করতে হবে 
$git checkout branch_name

git merge branch_name

আমরা যদি কোনো ব্রাঞ্চকে ডিলিট করতে চাই তাইলে নিচের কমান্ড এক্সিকিউট করতে হবে
$git branch -D branch_name

আমাদের যদি কোনো নির্দিষ্ট Branchকে Clone করতে হয় তখন আমাদের নিচের কমান্ড এক্সিকিউট করতে হবে
$git clone --branch branch_name repo_link

আর আমরা যদি গিটহাবে থাকা সকল Branch কে Clone করতে চাই সেক্ষেত্রে নিচের কমান্ডগুলো এক্সিকিউট করতে হবে
$git clone repo_link
$cd dir_name
$gir branch   (For cheking branch)
$git branch -a  (For get all Branch)
$git checkout origin/another_branch_name
$git checkout another_branch_name
$git branch  (Now you get the another branch)

আর আমরা যদি দুইটি Branch কে একত্রে করতে চাই তখন আমাদের নিচে কমান্ড এক্সিকিউট করতে হবে
$git merge new_branch

			####################################################

					কোনো ফাইল গিটে পুশ করার কমান্ড

গিটে কোনো প্রোজেক্ট পুশ করার জন্য নিচের কমান্ডগুলো এক্সিকিউট করতে হবে
$git remote add origin https:link
$git branch -M main
$git push -u origin main
তবে আমরা পুশ করার সময় কিছু কিছু সমস্যার সম্মুখীন হই যেমন আমরা যদি অন্যের গিট প্রোজেক্টকে নিজের গিটহাব এ আপলোড করতে চাই তখন 
সে যে অরিজিন সেট করে সেই অরিজিনে আপলোড নেয় বাট তার গিট হাব লগ ইন না থাকায় আপলোড হয় না এটি সমাধানের জন্য নিচের কমান্ড 
এক্সিকিউট করতে হবে।
$git remote set-url origin "new_link"

আর রিমোট অরিজিনে কোন লিংক সেট করা আছে তা যদি জানতে চাই তখন নিচের কমান্ড এক্সিকিউট করতে হবে
$ git remote -v

			####################################################
				
					SSH Key জেনারেট করা

SSH key ব্যাবহারের জন্য প্রথমে আমাদের লোকার মেশিনে SSH key জেনারেট করতে হবে। এই জন্য নিচের কমান্ড এক্সিকিউট করতে হবে 
$ ssh-keygen -o -t rsa -C millatsakib01@gmail.comssh-keygen -o -t rsa -C millatsakib01@gmail.com
or,
$ ssh-keygen -t ed25519 -C "your_email@example.com"
তারপর চারবার ইন্টার এ হিট করতে হবে। কারন এই  জন্য চারটি  কাজ করতে হয়...
এরপর উইন্ডোজ এর জন্য নিচের পাথ এ ব্রাউজ করুন 
C:\Users\Milllat Sakib\.ssh
আর লিনাক্স এ নিচের পাথ ব্রাউজ করুন 
Computer:/home/sakib/.ssh
এখানে id_ed25519.pub নামে একটা ফাইল পাবেন সেটা open with notepad করুন। সেখানে আপনি আপনার SSH Key পেয়ে যাবেন। Key টি কপি করে আপনার গিটহাব এ গিয়ে পেস্ট করে দিন। ব্যাস কাজ সেস
আর হ্যাঁ গিটহাব এ আপনি সেটিংস এর ভেতর SSH and GPG keys অপশন পাবেন সেখান থেকে New SSH key করে আপনার key পেস্ট করে দিন। 




			####################################################
				
					একাধিক SSH Key ব্যাবহার করা

আমাদের কাজের প্রয়োজনে অনেক সময় একই মেশিনে একধিক SSH Key ব্যবহার করার প্রয়োজন হতে পারে। সেক্ষেত্রে আমরা নিচের ধাপ গুলো অনুসরণ করতে পারি

প্রথমে আমাদের আলাদা নামে একটি SSH Key Generate করতে হবে। নিচে একটি উদাহরণ দেওয়া হলঃ
ssh-keygen -t rsa -b 4096 -C "your_email@example.com" -f ~/.ssh/id_rsa_sohangub

এর ফলে id_rsa_sohangub নামে একটি SSH Key তৈরি হলো। এখন আমাদের এই keyটাকে কনফিগার করতে হবে। কারন আমাদের একই মেশিনে একাধিক key তৈরি করে ফেলেছি।
এই জন্য নিচের কমান্ড দুইটি আলাদাভাবে এক্সিকিউট করতে হবে

eval "$(ssh-agent -s)"

ssh-add ~/.ssh/id_rsa_sohangub

এখন যেহেতু মাল্টিপল SSH ফাইল আছে তাই আমাদের ম্যানুয়ালি বলে দিতে হবে কোন কমান্ডের জন্য কোন SSH Key ব্যাবহার হবে। এই জন্য আমাদের .ssh ফোল্ডারে config নামে এক্সটেনশন ছাড়া একটি ফাইল তৈরি করতে হবে। এবং এটাকে টেক্সট ফাইলের মত করে নিচের কনফিগারেশন লিখে দিতে হবে 
`
Host github-millatsakibbdCalling
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa_sohangub
    IdentitiesOnly yes

`

একাধিক ফাইল হলে ওই config ফাইলের মধ্যে মাল্টিপল কনফিগারেশন Add করতে হবে। কিন্তু আমাদের এক্ষেত্রে আমাদের রিপোতে থাকা ssh লিংক দিয়ে পুশ করতে পারব না। এর লিংকটাকে নিচের মতো করে আপডেট করতে হবে
git@github-millatsakibbdCalling:millatsakibbdCalling/java-learing.git



			####################################################
				
					      গিট রিসেট

গিটে রিসেট কমান্ড ব্যাবহার করে এক কমিট থেকে অন্য কমিটে লাফালাফি করতে পারি। তিন ধরণের রিসেট কমান্ড হয়।
1. Soft Reset: Soft Reset এর ক্ষেত্রে ফাইলগুলো সব স্টেজড অবস্থায় থাকে কিন্তু কমিট গুলো ডিলিট হয়ে যায়।
Command: git reset --soft HEAD~1

2. Hard Reset: Hard Reset এর ক্ষেত্রে ফাইল ও কমিট সব ডিলিট হয়ে যায়। 
Command: git reset --hard HEAD~2

3. Mixed Reset: Mixed Reset এর ক্ষেত্রে ফাইল্গুলো সব আনস্টেজড অবস্থায় থাকে এবং কমিটগুলো রিমুভ হয়ে যায়। 
Command: git reset --mixed HEAD~2


			####################################################
				
					      গিট রিবেজিং

Interactive Rebasing খুবই পাওয়ারফুল একটা টুল। এটা দিয়ে আমরা নির্দিষ্ট কমিটে ফাইল পরিবরতন করতে পারি। 
Commands:
git rebase -i HEAD~3
এখানে কোন কোন কমিট পরিবর্তন করতে চাই তা জানতে চাইবে। যেগুলা এডিট করতে চাই সেগুলোতে Pick কেটে দিয়ে e লিখব। এরবর Esc+:wq দিয়ে বারিয়ে আসব। তারপর ফাইলগুলো ADD করে নিচের কমান্ডগুলো এক্সিকিউট করব। 
git add -A
git rebase --continue
আমরা কোনো কারনে রিবেজিং করতে না চাইলে নিচের কমান্ড দিয়ে বের হয়ে আসতে পারি।
git rebase --abort
আমরা চাইলে নিচের কমান্ড দিয়ে ফাইল ডাইরেক্টলি লাস্ট কমিটের সাথে যুক্ত করে দিতে পারি
git add -A
git commit -m --amend
এছাড়া আমরা চাইলে লাস্ট কমিট ম্যাসেজ ও চেঞ্জ করে দিতে পারি নিচের কমান্ড দিয়ে
git commit --amend




আর আমরা যদি জানতে চাই যে 
git diff

 git restore

 
git add -A  (A for all)



git reset --soft HEAD^

git reset HEAD^

git reset --hard HEAD^ 
+-oopiiiuyyyytrewqp[[[]]]]]]
git add file_name

touch file_name












git log

git log --oneline

git branch branch_name

git checkout branch_name

git checkout -b branch_name

mkdir directory_name

git remote add origin https_link

git remote -v

git push origin master
